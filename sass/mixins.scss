@mixin rounded($radius){
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}
@mixin shadow($x, $y, $blur, $color){
    -webkit-box-shadow: $x $y $blur $color;
    -moz-box-shadow: $x $y $blur $color;
    box-shadow: $x $y $blur $color;
}
@mixin shadow-inset($x, $y, $blur, $color){
    -webkit-box-shadow: inset $x $y $blur $color;
    -moz-box-shadow: inset $x $y $blur $color;
    box-shadow: inset $x $y $blur $color;
}
@mixin prefix($property, $argument){
    -webkit-#{$property}: $argument;
    -moz-#{$property}: $argument;
    -o-#{$property}: $argument;
    #{$property}: $argument;
}
@mixin navigation{
    list-style-type: none;
    padding: 0;
    margin: 0;
    overflow: hidden;
    > li{
        display: block;
        float: left;
        &:last-child{
            margin-right: 0;
        }
    }
}
// Breakpoint mixins
@mixin bp-large{
    @media only screen and (max-width: 60em){
        @content;
    }
}
@mixin bp-medium {
    @media only screen and (max-width: 40em) {
        @content;
    }
}
@mixin bp-small{
    @media only screen and (max-width: 30em){
        @content;
    }
}

// Mixin for animations
@mixin keyframes($animation-name) {
    @-webkit-keyframes $animation-name {
        @content;
    }
    @-moz-keyframes $animation-name {
        @content;
    }  
    @-ms-keyframes $animation-name {
        @content;
    }
    @-o-keyframes $animation-name {
        @content;
    }  
    @keyframes $animation-name {
        @content;
    }
}
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str}  ;  
}

@mixin gridRow($numPerRow,$margin){
    width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
    &:nth-child(n){
        margin-bottom: $margin;
        margin-right: $margin;
    }
    &:nth-child(#{$numPerRow}n){
        margin-right: 0;
    }
    &:last-child{
        margin-right: 0;
    }
}

// Visually hide and alement
%visuallyhidden{
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
    position: absolute;
}


// More practical CSS...
// using mobile first method (IE8,7 requires respond.js polyfill https://github.com/scottjehl/Respond)

$breakpoint-alpha: 480px; // adjust to your needs

.rwd-table {
  margin: 1em 0;
  min-width: 300px; // adjust to your needs
  
  tr {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
  }
  
  th {
    display: none; // for accessibility, use a visually hidden method here instead! Thanks, reddit!   
  }
  
  td {
    display: block; 
    
    &:first-child {
      padding-top: .5em;
    }
    &:last-child {
      padding-bottom: .5em;
    }

    &:before {
      content: attr(data-th)": "; // who knew you could do this? The internet, that's who.
      font-weight: bold;

      // optional stuff to make it look nicer
      width: 6.5em; // magic number :( adjust according to your own content
      display: inline-block;
      // end options
      
      @media (min-width: $breakpoint-alpha) {
        display: none;
      }
    }
  }
  
  th, td {
    text-align: left;
    
    @media (min-width: $breakpoint-alpha) {
      display: table-cell;
      padding: .25em .5em;
      
      &:first-child {
        padding-left: 0;
      }
      
      &:last-child {
        padding-right: 0;
      }
    }

  }
}